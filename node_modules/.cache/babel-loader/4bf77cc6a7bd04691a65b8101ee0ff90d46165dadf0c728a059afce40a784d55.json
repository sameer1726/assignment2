{"ast":null,"code":"import { mapActions, mapGetters } from \"vuex\";\nexport default {\n  data() {\n    return {\n      current_date: \"\",\n      current_day: \"\"\n      // icon: {\n      //   sunny: \"sunny-day.png\",\n      //   clear: \"sunny-day.png\",\n      //   cloudy: \"cloudy.png\",\n      //   partly_cloudy: \"cloudy.png\",\n      //   rain: \"rainy.png\",\n      //   moderate_rain: \"rainy.png\",\n      //   patchy_rain_possible: \"rainy.png\",\n      // },\n    };\n  },\n\n  computed: {\n    ...mapGetters([\"getWeather\"])\n  },\n  methods: {\n    ...mapActions([\"GET_WEATHER\"]),\n    dateTimeManager(thisDate) {\n      // console.log(\"thisdate: \" + thisDate);\n      const days = {\n        0: \"Sunday\",\n        1: \"Monday\",\n        2: \"Tuesday\",\n        3: \"Wednesday\",\n        4: \"Thursday\",\n        5: \"Friday\",\n        6: \"Saturday\"\n      };\n      const cd = new Date(thisDate.split());\n      let day = cd.getDay();\n      this.current_day = days[day]; //day\n      let dateArr = thisDate.split(\"-\"); //date\n      this.current_date = dateArr[2] + \"th\";\n      const current_day_date_display = this.current_day.substring(0, 3) + \" \" + this.current_date;\n      return current_day_date_display;\n    }\n\n    // iconQueryMaker(weatherType) {\n    //   let temp = weatherType.slice().toLowerCase();\n    //   temp = temp.replaceAll(\" \", \"_\");\n    //   console.log(\"temp: \", temp);\n    //   console.log(\"icon maker: \", \"@/assets/images/\" + this.icon.temp);\n    //   return \"@/assets/images/\" + temp;\n    // },\n  },\n\n  created: function () {\n    this.$store.dispatch(\"GET_WEATHER\");\n  }\n};","map":{"version":3,"mappings":"AA4CA;AAEA;EACAA;IACA;MACAC;MACAC;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACA;EACA;;EAEAC;IACA;EACA;EAEAC;IACA;IAEAC;MACA;MACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA,iCACA;MACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;EACA;;EAEAC;IACA;EACA;AACA","names":["data","current_date","current_day","computed","methods","dateTimeManager","created"],"sourceRoot":"src/components","sources":["HourCard.vue"],"sourcesContent":["<template>\n  <div class=\"hour-cards\">\n    <div\n      v-for=\"(thisDay, index) in getWeather.forecast.forecastday\"\n      :key=\"index\"\n      class=\"hour-card\"\n    >\n      <div class=\"date\">\n        <h3>Friday, 13th Feb</h3>\n      </div>\n      <div class=\"time\">\n        <p>00:00</p>\n      </div>\n      <div class=\"bottom\">\n        <div class=\"temp\">\n          <div class=\"f\">\n            <p>74.2ºF</p>\n          </div>\n          <div class=\"c\">\n            <p>23.5ºC</p>\n          </div>\n        </div>\n        <div class=\"details\">\n          <div class=\"humidity\">\n            <p>Humidity: 23</p>\n          </div>\n          <div class=\"visibility\">\n            <p>Visibility: 10km</p>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- <div class=\"hour-card\"></div>\n    <div class=\"hour-card\"></div>\n    <div class=\"hour-card\"></div>\n    <div class=\"hour-card\"></div>\n    <div class=\"hour-card\"></div>\n    <div class=\"hour-card\"></div>\n    <div class=\"hour-card\"></div>\n    <div class=\"hour-card\"></div> -->\n  </div>\n</template>\n\n<script>\nimport { mapActions, mapGetters } from \"vuex\";\n\nexport default {\n  data() {\n    return {\n      current_date: \"\",\n      current_day: \"\",\n      // icon: {\n      //   sunny: \"sunny-day.png\",\n      //   clear: \"sunny-day.png\",\n      //   cloudy: \"cloudy.png\",\n      //   partly_cloudy: \"cloudy.png\",\n      //   rain: \"rainy.png\",\n      //   moderate_rain: \"rainy.png\",\n      //   patchy_rain_possible: \"rainy.png\",\n      // },\n    };\n  },\n\n  computed: {\n    ...mapGetters([\"getWeather\"]),\n  },\n\n  methods: {\n    ...mapActions([\"GET_WEATHER\"]),\n\n    dateTimeManager(thisDate) {\n      // console.log(\"thisdate: \" + thisDate);\n      const days = {\n        0: \"Sunday\",\n        1: \"Monday\",\n        2: \"Tuesday\",\n        3: \"Wednesday\",\n        4: \"Thursday\",\n        5: \"Friday\",\n        6: \"Saturday\",\n      };\n      const cd = new Date(thisDate.split());\n      let day = cd.getDay();\n      this.current_day = days[day]; //day\n      let dateArr = thisDate.split(\"-\"); //date\n      this.current_date = dateArr[2] + \"th\";\n      const current_day_date_display =\n        this.current_day.substring(0, 3) + \" \" + this.current_date;\n      return current_day_date_display;\n    },\n\n    // iconQueryMaker(weatherType) {\n    //   let temp = weatherType.slice().toLowerCase();\n    //   temp = temp.replaceAll(\" \", \"_\");\n    //   console.log(\"temp: \", temp);\n    //   console.log(\"icon maker: \", \"@/assets/images/\" + this.icon.temp);\n    //   return \"@/assets/images/\" + temp;\n    // },\n  },\n\n  created: function () {\n    this.$store.dispatch(\"GET_WEATHER\");\n  },\n};\n</script>\n\n<style scoped>\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n.hour-cards {\n  display: flex;\n  overflow-x: scroll;\n  padding-bottom: 0.5%;\n  width: 100vw;\n  height: 28vh;\n  padding-right: 0.2%;\n  padding-left: 0.2%;\n}\n\n.hour-card {\n  /* width: 30vw; */\n  min-width: 17vw;\n  padding: 1%;\n  margin: 0.2%;\n  height: 26vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  /* align-items: center; */\n\n  background: rgba(255, 255, 255, 0.25);\n  border: 2px solid rgba(0, 0, 0, 0.16);\n  border-radius: 10px;\n}\n\n.date h3 {\n  /* width: 14vw; */\n  text-align: left;\n  font-size: 21px;\n}\n\n.time p {\n  letter-spacing: 1em;\n  text-align: center;\n  font-size: 17px;\n  font-weight: 600;\n\n  flex: none;\n  order: 1;\n  align-self: stretch;\n  flex-grow: 0;\n}\n\n.temp {\n  /* margin: 3%; */\n  display: flex;\n  justify-content: space-between;\n  margin-right: 12%;\n  margin-left: 12%;\n}\n\n.f p,\n.c p {\n  font-size: 17px;\n}\n\n.details {\n  margin-top: 4%;\n  display: flex;\n  justify-content: space-between;\n}\n\n.humidity p,\n.visibility p {\n  font-size: 15px;\n  opacity: 0.8;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}